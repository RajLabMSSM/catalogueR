% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_tabix.R
\name{fetch_tabix}
\alias{fetch_tabix}
\title{Query eQTL Catalogue:tabix/echotabix}
\source{
\code{
data("meta");
gwas_data <- echodata::BST1
qtl.subset <- catalogueR:::fetch_tabix(unique_id=meta$unique_id[2],
                                       gwas_data=gwas_data,
                                       conda_env=NULL)
}
}
\usage{
fetch_tabix(
  unique_id,
  method = c("tabix", "echotabix"),
  quant_method = "ge",
  infer_region = TRUE,
  gwas_data = NULL,
  chrom = NULL,
  bp_lower = NULL,
  bp_upper = NULL,
  is_gwas = FALSE,
  nThread = 1,
  conda_env = NULL,
  verbose = TRUE
)
}
\arguments{
\item{method}{Method for querying eQTL Catalogue:
\itemize{
\item{"tabix"}{Uses tabix CLI tool. Fastest option, but less reliable. 
Requires tabix CLI tool to be installed by user first.}
\item{"echotabix"}{Uses tabix CLI tool. 2nd fastest option,
 but less reliable. 
 Does not require any additional software to be installed.}
\item{"REST"}{Uses the REST API.}{Slowest, but most reliable.
Does not require any additional software to be installed.}
}
\emph{Note}:Tabix is about ~17x faster than the REST API,
 but is currently a far less reliable method than the REST API because 
 tabix tends to get blocked by eQTL Catalogue's firewall.
See \href{https://github.com/RajLabMSSM/catalogueR/issues/5}{here}
for more details.}

\item{quant_method}{eQTL Catalogue actually contains more than just
 eQTL data.
For each dataset, the following kinds of QTLs can be queried:
\describe{
\item{gene expression QTL}{\code{quant_method="ge"} (\emph{default})
or \code{quant_method="microarray"}, depending on the dataset.
\strong{catalogueR} will automatically select whichever option is available.}
\item{exon expression QTL}{\emph{*under construction*}
\code{quant_method="ex"}}
\item{transcript usage QTL}{\emph{*under construction*}
\code{quant_method="tx"}}
\item{promoter, splice junction and 3' end usage QTL}{
\emph{*under construction*}  \code{quant_method="txrev"}}
}}

\item{infer_region}{Infer the range of coordinates to query based on
the min/max positions in each of the summary statistics files
 (\code{sumstats_paths}).}

\item{nThread}{The number of CPU cores you want to use to speed up your
queries through parallelization.}

\item{conda_env}{Conda environment to search for tabix executable in.}

\item{verbose}{Show more (\code{=TRUE}) or fewer (\code{=FALSE}) messages.}
}
\description{
Query eQTL Catalogue datasets by region with tabix or \pkg{echotabix}.
Faster alternative to REST API.
}
\seealso{
Other eQTL Catalogue: 
\code{\link{eQTL_Catalogue.fetch}()},
\code{\link{eQTL_Catalogue.header}},
\code{\link{eQTL_Catalogue.iterate_fetch}()},
\code{\link{eQTL_Catalogue.query}()},
\code{\link{eQTL_Catalogue.search_metadata}()},
\code{\link{fetch_restAPI}()},
\code{\link{merge_gwas_qtl}()},
\code{\link{meta}}
}
\concept{eQTL Catalogue}
\keyword{internal}
